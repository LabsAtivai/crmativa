function mostrarHistoricoDoRemetenteAberto(e) {
  var messageId = e.gmail.messageId; // Obtém o ID da mensagem aberta
  var message = GmailApp.getMessageById(messageId); // Obtém a mensagem específica pelo ID
  var remetente = message.getFrom(); // Obtém o remetente da mensagem

  var threads = GmailApp.search(`from:${remetente}`);
  var card = CardService.newCardBuilder();

  // Cabeçalho com título em laranja
  card.setHeader(
    CardService.newCardHeader()
      .setTitle('<font color="#FFA500"> CRM ATIVA ' + '</font>')
  );

  // Adiciona campos para nome, email e telefone do contato
  var sectionContato = CardService.newCardSection()
    .addWidget(CardService.newTextInput()
      .setFieldName('nomeContato')
      .setTitle('Nome do Contato')
      .setValue(remetente))
    .addWidget(CardService.newTextInput()
      .setFieldName('emailContato')
      .setTitle('Email do Contato')
      .setValue('Insira o email aqui'))
    .addWidget(CardService.newTextInput()
      .setFieldName('telefoneContato')
      .setTitle('Telefone do Contato')
      .setValue('Insira o telefone aqui'));

  // Adiciona um botão para salvar o contato
  sectionContato.addWidget(
    CardService.newButtonSet()
    .addButton(
      CardService.newTextButton()
      .setText('Salvar Contato')
      .setOnClickAction(
        CardService.newAction().setFunctionName('salvarContato')
      )
    )
  );

  // Adiciona o bloco de notas no card
  var sectionBlocoDeNotas = CardService.newCardSection()
    .addWidget(CardService.newTextInput()
      .setFieldName('blocoDeNotas')
      .setTitle('Bloco de Notas')
      .setMultiline(true)
      .setValue('Digite suas anotações aqui...'));

  // Adiciona as seções ao card
  card.addSection(sectionContato);
  card.addSection(sectionBlocoDeNotas);

  threads.forEach(function(thread) {
    var labels = thread.getLabels().map(function(label) {
      return label.getName();
    }).join(', ');

    var messages = thread.getMessages();
    messages.forEach(function(msg) {
      card.addSection(
        CardService.newCardSection()
        .addWidget(CardService.newTextParagraph().setText(
          msg.getDate().toLocaleString() + ': ' + msg.getSubject() + ' (Labels: ' + labels + ')'
        ))
      );
    });
  });

  return card.build();
}

// Função para salvar o contato
function salvarContato(e) {
  var nomeContato = e.commonEventObject.formInputs.nomeContato.stringInputs.value[0];
  var emailContato = e.commonEventObject.formInputs.emailContato.stringInputs.value[0];
  var telefoneContato = e.commonEventObject.formInputs.telefoneContato.stringInputs.value[0];

  // Aqui você pode adicionar a lógica para salvar o contato, por exemplo, salvá-lo em um banco de dados ou planilha

  // Retorna uma resposta indicando que o contato foi salvo
  return CardService.newActionResponseBuilder()
    .setNotification(CardService.newNotification()
      .setText('Contato salvo: ' + nomeContato + ', Email: ' + emailContato + ', Telefone: ' + telefoneContato))
    .build();
}

function buildAddOn(e) {
  return mostrarHistoricoDoRemetenteAberto(e);
}
